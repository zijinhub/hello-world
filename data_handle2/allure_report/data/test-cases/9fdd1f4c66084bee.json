{
  "uid" : "9fdd1f4c66084bee",
  "name" : "test_encash_api[B001_2020030_388849361275]",
  "fullName" : "data_handle2.testcase_set#test_encash_api",
  "historyId" : "d068bb4ad6d364d5273bfb0d23784050",
  "time" : {
    "start" : 1590655741614,
    "stop" : 1590655741614,
    "duration" : 0
  },
  "description" : "兑奖用例详情：玩法B001, 期号：2020030, 票号：36b214210633f92cd299 ",
  "descriptionHtml" : "<p>兑奖用例详情：玩法B001, 期号：2020030, 票号：36b214210633f92cd299</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: assert '100000' == '100301'\n  - 100000\n  + 100301",
  "statusTrace" : "encash_test_case = ('B001', '2020030', '36b214210633f92cd299', {'BackCode': '100301', 'BackMsg': '不在销售期内'})\n\n    @pytest.mark.run(order=3)\n    # @pytest.mark.smoke\n    def test_encash_api(encash_test_case):\n        \"\"\"\n        # 下面的函数测试了，可以将数据库的备注动态的输入到allure的报告中，可以使用数据库中的caseid\n        测试了动态添加allure标签，不用再去处理\n        :param query_test_case:\n        :return:\n        \"\"\"\n        playEname, sell_term_code, ticket_code, recv = encash_test_case\n    \n        allure.dynamic.feature(\"兑奖接口_\" + playEname)\n        allure.dynamic.story(playEname + '_' + sell_term_code + '_case')\n        allure.dynamic.severity(allure.severity_level.CRITICAL)\n        allure.dynamic.description(\"兑奖用例详情：玩法{}, 期号：{}, 票号：{} \".format(playEname, sell_term_code, ticket_code))\n>       assert '100000' == recv['BackCode']\nE       AssertionError: assert '100000' == '100301'\nE         - 100000\nE         + 100301\n\ntestcase_set.py:73: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "encash_test_case",
    "time" : {
      "start" : 1590655741533,
      "stop" : 1590655741613,
      "duration" : 80
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "testStage" : {
    "description" : "兑奖用例详情：玩法B001, 期号：2020030, 票号：36b214210633f92cd299 ",
    "status" : "failed",
    "statusMessage" : "AssertionError: assert '100000' == '100301'\n  - 100000\n  + 100301",
    "statusTrace" : "encash_test_case = ('B001', '2020030', '36b214210633f92cd299', {'BackCode': '100301', 'BackMsg': '不在销售期内'})\n\n    @pytest.mark.run(order=3)\n    # @pytest.mark.smoke\n    def test_encash_api(encash_test_case):\n        \"\"\"\n        # 下面的函数测试了，可以将数据库的备注动态的输入到allure的报告中，可以使用数据库中的caseid\n        测试了动态添加allure标签，不用再去处理\n        :param query_test_case:\n        :return:\n        \"\"\"\n        playEname, sell_term_code, ticket_code, recv = encash_test_case\n    \n        allure.dynamic.feature(\"兑奖接口_\" + playEname)\n        allure.dynamic.story(playEname + '_' + sell_term_code + '_case')\n        allure.dynamic.severity(allure.severity_level.CRITICAL)\n        allure.dynamic.description(\"兑奖用例详情：玩法{}, 期号：{}, 票号：{} \".format(playEname, sell_term_code, ticket_code))\n>       assert '100000' == recv['BackCode']\nE       AssertionError: assert '100000' == '100301'\nE         - 100000\nE         + 100301\n\ntestcase_set.py:73: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "904e1923b69ccceb",
      "name" : "log",
      "source" : "904e1923b69ccceb.txt",
      "type" : "text/plain",
      "size" : 798
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : true,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "feature",
    "value" : "兑奖接口_B001"
  }, {
    "name" : "story",
    "value" : "B001_2020030_case"
  }, {
    "name" : "severity",
    "value" : "critical"
  }, {
    "name" : "parentSuite",
    "value" : "data_handle2"
  }, {
    "name" : "suite",
    "value" : "testcase_set"
  }, {
    "name" : "host",
    "value" : "t37-pc2"
  }, {
    "name" : "thread",
    "value" : "4240-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "data_handle2.testcase_set"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "encash_test_case",
    "value" : "{'SellTermCode': '2020030', 'TicketCode': '36b214210633f92cd299', 'PlayEname': 'B001', 'Runcode': '388849361275'}"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "critical",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "9fdd1f4c66084bee.json",
  "parameterValues" : [ "{'SellTermCode': '2020030', 'TicketCode': '36b214210633f92cd299', 'PlayEname': 'B001', 'Runcode': '388849361275'}" ]
}